#!/bin/bash
set -e -E

GEMINI_API_KEY=$(cat ~/.gemini/api-key)
MODEL_ID="gemini-2.5-pro"
GENERATE_CONTENT_API="generateContent"
PROMPT=$1
FILE_NAME=$2
TITLE=$3

cat << EOF > staging/request.json
{
    "contents": [
      {
        "role": "user",
        "parts": [
          {
            "text": "${PROMPT}"
          },
        ]
      },
    ],
    "generationConfig": {
      "thinkingConfig": {
        "thinkingBudget": -1,
      },
      "responseMimeType": "text/plain",
    },
}
EOF

# add title
echo -e "# ${TITLE}\n\n" > ./results/${FILE_NAME}

# send notify
/usr/bin/notify-send -i /usr/share/icons/oxygen/16x16/places/start-here-kde-fedora.png --app-name "Gemini AI Inference" -t 5000 "This will take a while. Please be patient."

curl \
-X POST \
-H "Content-Type: application/json" \
"https://generativelanguage.googleapis.com/v1beta/models/${MODEL_ID}:${GENERATE_CONTENT_API}?key=${GEMINI_API_KEY}" -d '@staging/request.json' | jq .candidates[0].content.parts[].text | sed 's/\\n/\n/g' >> "./results/${FILE_NAME}"

# for the error handling this format is important
echo -e "exit => $?"
